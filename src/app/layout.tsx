import type { Metadata } from "next";

import { Geist, Geist_Mono } from "next/font/google"; // Importing Google Fonts  

import "./globals.css";

// Setting up the fonts with CSS variables
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

// Setting up the mono font with CSS variables
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Metadata for the application
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Root layout component that wraps the entire application with HTML structure and body styling 
export default function RootLayout({
  children, // Children components to be rendered inside the layout 
  // React.ReactNode type ensures that any valid React element can be passed as children 
  // Readonly ensures that the props cannot be modified
  // This is useful for maintaining the integrity of the layout components
  // The layout includes the HTML and body tags
  // The body tag includes classes for font and antialiasing
  // The fonts are applied using CSS variables defined earlier
  // This layout will be used across all pages of the application

}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
    <body
    // Applying the font variables and antialiasing to the body
    className={`${geistSans.variable} ${geistMono.variable} antialiased`}
  >
    {children} {/* Rendering the children components inside the body */}
    </body>
    </html>
  );
}
